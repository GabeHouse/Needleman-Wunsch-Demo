{"version":3,"sources":["components/Square.js","components/Grid.js","App.js","index.js"],"names":["Square","props","className","id","onClick","handleClick","div","value","highlightPath","path","D","i","length","j","document","getElementById","style","backgroundColor","clearPath","Grid","useEffect","seq2","split","map","c","key","row","seq1","charAt","e","score","App","state","matchScore","mismatchScore","gapScore","handleChange","bind","event","target","this","setState","toString","toUpperCase","isNaN","parseInt","a","b","Array","substring","repeat","push","valueOf","f","Math","max","align","href","colSpan","type","maxLength","onChange","rowSpan","React","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1f360188.chunk.js","sourcesContent":["import React from 'react';\nimport { animated } from 'react-spring';\n\nfunction Square(props) {\n  return (\n    <div\n      className={props.className}\n      id={props.id}\n      onClick={props.handleClick}\n    >\n      <animated.div>\n        {props.value}\n      </animated.div>\n    </div>\n  );\n}\n\nexport default Square;\n","import React, { useEffect } from 'react'\nimport Square from './Square';\n\nfunction highlightPath(path, D) {\n  clearPath(D);\n  for (let i = 0; i < path.length; i++) {\n    document.getElementById(path[i]).style.backgroundColor = \"red\";\n  }\n}\n\nfunction clearPath(D) {\n  for (let i = 0; i < D.length; i++) {\n    for (let j = 0; j < D[0].length; j++) {\n      document.getElementById(D[i][j].id).style.backgroundColor =\n      \"rgb(221, 255, 204)\";\n    }\n  }\n}\nexport default function Grid(props) {\n\n  useEffect(() => {\n    highlightPath(props.D[props.D.length - 1][props.D[0].length - 1].path, props.D);\n  }, [props]);\n\n  return (\n    <div>\n      <table >\n        <tbody >\n          <tr>\n            <td>\n              <Square className=\"letter_square\" />\n            </td>\n            <td>\n              <Square className=\"letter_square\" />\n            </td>\n            {props.seq2.split(\"\").map((c, i) => (\n              <td key={i}>\n                <Square value={c} className=\"letter_square\" />\n              </td>\n            ))}\n          </tr>\n          {props.D.map((row, i) => (\n            <tr key={i}>\n              <td>\n                <Square\n                  value={props.seq1.charAt(i - 1)}\n                  className=\"letter_square\"\n                />\n              </td>\n              {row.map((e, j) => (\n                <td key={props.D[i][j].id}>\n\n                  <div>\n                    <Square\n                      value={props.D[i][j].score}\n                      className=\"score_square\"\n                      id={props.D[i][j].id}\n                      handleClick={() => highlightPath(props.D[i][j].path, props.D)}\n                    />\n                  </div>\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}","import React from \"react\";\nimport Grid from './components/Grid';\n\nfunction align(a, b, matchScore, mismatchScore, gapScore) {\n  //    b0 b1 bj ...\n  // a0\n  // a1   D[i,j] = {score, a, b} where score and a/b is the optimal score and\n  // ai                          alignment for a0a1..ai and b0b1..bj\n  // ...\n\n  let D = new Array(a.length + 1);\n  for (let i = 0; i < a.length + 1; i++) {\n    D[i] = new Array(b.length + 1);\n    D[i][0] = { score: gapScore * i, a: a.substring(0, i), b: \"-\".repeat(i) };\n    D[i][0].id = i + \",0\";\n    if (i > 0) {\n      D[i][0].path = [...D[i - 1][0].path];\n    } else {\n      D[i][0].path = [];\n    }\n    D[i][0].path.push(D[i][0].id.valueOf());\n  }\n  for (let j = 0; j < b.length + 1; j++) {\n    D[0][j] = { score: gapScore * j, a: \"-\".repeat(j), b: b.substring(0, j) };\n    D[0][j].id = \"0,\" + j.toString();\n    if (j > 0) {\n      D[0][j].path = [...D[0][j - 1].path];\n    } else {\n      D[0][j].path = [];\n    }\n    D[0][j].path.push(D[0][j].id.valueOf());\n  }\n\n  for (let i = 0; i < a.length; i++) {\n    for (let j = 0; j < b.length; j++) {\n      let f = b.charAt(j) === a.charAt(i) ? matchScore : mismatchScore;\n      let score = Math.max(\n        D[i][j].score + f,\n        D[i][j + 1].score + gapScore,\n        D[i + 1][j].score + gapScore\n      );\n      D[i + 1][j + 1] = {};\n      D[i + 1][j + 1].score = score;\n      D[i + 1][j + 1].id = i + 1 + \",\" + (j + 1);\n      if (score === D[i][j].score + f) {\n        D[i + 1][j + 1].a = D[i][j].a + a.charAt(i);\n        D[i + 1][j + 1].b = D[i][j].b + b.charAt(j);\n        D[i + 1][j + 1].path = [...D[i][j].path];\n      } else if (score === D[i][j + 1].score + gapScore) {\n        D[i + 1][j + 1].a = D[i][j + 1].a + a.charAt(i);\n        D[i + 1][j + 1].b = D[i][j + 1].b + \"-\";\n        D[i + 1][j + 1].path = [...D[i][j + 1].path];\n      } else {\n        D[i + 1][j + 1].a = D[i + 1][j].a + \"-\";\n        D[i + 1][j + 1].b = D[i + 1][j].b + b.charAt(j);\n        D[i + 1][j + 1].path = [...D[i + 1][j].path];\n      }\n      D[i + 1][j + 1].path.push(D[i + 1][j + 1].id.valueOf());\n    }\n  }\n  return D;\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    let seq1 = \"AATCTAG\",\n      seq2 = \"ATCGGTCG\";\n    this.state = {\n      seq1: seq1,\n      seq2: seq2,\n      matchScore: 1,\n      mismatchScore: -1,\n      gapScore: -1,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(event) {\n    if (event.target.id === \"seq1\") {\n      this.setState({ seq1: event.target.value.toString().toUpperCase() });\n    } else if (event.target.id === \"seq2\") {\n      this.setState({ seq2: event.target.value.toString().toUpperCase() });\n    } else if (event.target.id === \"match\") {\n      this.setState({ matchScore: event.target.value });\n    } else if (event.target.id === \"mismatch\") {\n      this.setState({ mismatchScore: event.target.value });\n    } else if (event.target.id === \"gap\" && !isNaN(event.target.value)) {\n      this.setState({ gapScore: event.target.value });\n    }\n  }\n  render() {\n    let matchScore = isNaN(parseInt(this.state.matchScore))\n      ? 0\n      : parseInt(this.state.matchScore);\n    let mismatchScore = isNaN(parseInt(this.state.mismatchScore))\n      ? 0\n      : parseInt(this.state.mismatchScore);\n    let gapScore = isNaN(parseInt(this.state.gapScore))\n      ? 0\n      : parseInt(this.state.gapScore);\n    let D = align(\n      this.state.seq1,\n      this.state.seq2,\n      matchScore,\n      mismatchScore,\n      gapScore\n    );\n    return (\n      <div id=\"main\">\n        <p>\n\n          I was introduced to the <a href=\"https://en.wikipedia.org/wiki/Needleman%E2%80%93Wunsch_algorithm\">Needleman-Wunsch algorithm </a>during a fourth year CS course in the context of computing the similarity and optimal alignment of two DNA sequences. What is so fascinating about the algorithm is its simplicity, yet its ability to reduce to other popular dynamic programming problems such as <button onClick={() => {this.setState({matchScore: 1, mismatchScore: 0, gapScore: 0})}}>Longest Common Subsequence</button>  and <button onClick={() => {this.setState({matchScore: 0, mismatchScore: -1, gapScore: -1})}}>Edit Distance</button> by changing the score scheme. The Needleman-Wunsch algorithm is still widely used in areas like bioinformatics, where its quadratic time and linear space complexities make it effective for aligning extremely long strings.\n          </p>\n          <p>\n          The problem is solved by filling D with the recurrence relation,\n          <br></br>\n          $$\\texttt{'{ D[i, j] = max}'}\n          \\begin{'{cases}'}\n          \\texttt{'{D[i-1, j-1] + f(S[i], T[j])}'}\\\\\n          \\texttt{'{D[i-1, j] + f(S[i], -)}'}\\\\\n          \\texttt{'{D[i, j-1] + f(-, T[j])}'}\n          \\end{'{cases}'}\n          \\texttt{'{= max}'}\n          \\begin{'{cases}'}\n          \\texttt{'{D[i-1, j-1] + Match_Score if S[i] == T[j] else Mismatch_Score}'}\\\\\n          \\texttt{'{D[i-1, j] + Gap_Score}'}\\\\\n          \\texttt{'{D[i, j-1] + Gap_Score}'}\n          \\end{'{cases}'}\n          $$\n          to compute the optimal score, then backtracking to find the corresponding alignment.\n          </p>\n        <p>\n          The demo below shows for two sequences S and T and a score scheme:\n          <ul>\n            <li>The optimal alignment and score</li>\n            <li><span className=\"mono\">D</span>, where <span className=\"mono\">D[i, j]</span> holds the optimal score for sequences <span className=\"mono\">S[:i]</span> and <span className=\"mono\">T[:j]</span></li>\n            <li>The path followed by backtracking highlighted in red</li>\n          </ul>\n\n        </p>\n        <table id=\"param_result\">\n          <tr>\n\n            <td>\n              <tr>\n                <td>\n                  <label className=\"param_label\"> Sequence S</label>\n                </td>\n                <td colSpan=\"4\">\n                  <input\n\n                    type=\"text\"\n                    id=\"seq1\"\n                    className=\"seq\"\n                    value={this.state.seq1}\n                    maxLength=\"20\"\n                    onChange={this.handleChange}\n                  ></input>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <label className=\"param_label\">Sequence T</label>\n                </td>\n                <td colSpan=\"4\">\n                  <input\n                    type=\"text\"\n                    id=\"seq2\"\n                    className=\"seq\"\n                    value={this.state.seq2}\n                    maxLength=\"20\"\n                    onChange={this.handleChange}\n                  ></input>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <table>\n                    <tr>\n                      <label className=\"param_label\">Match Score</label>\n                    </tr>\n                    <tr>\n                      <input\n                        className=\"params\"\n                        id=\"match\"\n                        type=\"number\"\n                        value={this.state.matchScore}\n                        onChange={this.handleChange}\n                      />\n                    </tr>\n                  </table>\n                </td>\n                <td>\n                  <table>\n                    <tr>\n                      <label className=\"param_label\">Mismatch Score</label>\n                    </tr>\n                    <tr>\n                      <input\n                        className=\"params\"\n                        id=\"mismatch\"\n                        type=\"number\"\n                        value={this.state.mismatchScore}\n                        onChange={this.handleChange}\n                      />\n                    </tr>\n\n                  </table>\n                </td>\n                <td>\n                  <table>\n                    <tr>\n                      <label className=\"param_label\">Gap Score</label>\n                    </tr>\n                    <tr>\n                      <input\n                        className=\"params\"\n                        id=\"gap\"\n                        type=\"number\"\n                        value={this.state.gapScore}\n                        onChange={this.handleChange}\n                      />\n                    </tr>\n                  </table>\n                </td>\n              </tr>\n            </td>\n\n            <td rowSpan=\"10\" id=\"result\" >\n              <table id=\"alignment\"  >\n                <tr>\n                  <table >\n                    <tbody>\n                      <tr>\n                        {D[this.state.seq1.length][this.state.seq2.length].a.split('').map((c, i) => <td>{c}</td>)}\n                      </tr>\n                      <tr>\n                        {D[this.state.seq1.length][this.state.seq2.length].b.split('').map((c, i) => <td>{c}</td>)}\n                      </tr>\n                    </tbody>\n                  </table>\n                </tr>\n                <tr>\n                  {'Score: ' + D[this.state.seq1.length][this.state.seq2.length].score}\n                </tr>\n              </table>\n            </td>\n\n          </tr>\n        </table>\n        <div>\n          <Grid D={D} seq1={this.state.seq1} seq2={this.state.seq2} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}