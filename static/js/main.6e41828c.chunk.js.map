{"version":3,"sources":["components/Square.js","components/Grid.js","App.js","index.js"],"names":["Square","props","className","id","onMouseOver","handleMouseOver","onMouseOut","handleMouseOut","value","Grid","highlightPath","bind","i","this","D","length","j","document","getElementById","style","backgroundColor","path","clearPath","seq2","split","map","c","key","row","seq1","charAt","e","score","React","Component","align","a","b","matchScore","mismatchScore","gapScore","Array","substring","repeat","push","valueOf","toString","f","Math","max","App","state","handleChange","event","target","setState","isNaN","parseInt","colSpan","type","maxLength","onChange","rowSpan","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6e41828c.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Square(props) {\n  return (\n    <div\n      className={props.className}\n      id={props.id}\n      onMouseOver={props.handleMouseOver}\n      onMouseOut={props.handleMouseOut}\n    >\n      {props.value}\n    </div>\n  );\n}\n\nexport default Square;","import React from 'react';\nimport Square from './Square';\nimport {useSpring, animated} from 'react-spring';\n\nclass Grid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.highlightPath = this.highlightPath.bind(this);\n  }\n\n  clearPath() {\n    for (let i = 0; i < this.props.D.length; i++) {\n      for (let j = 0; j < this.props.D[0].length; j++) {\n        document.getElementById(this.props.D[i][j].id).style.backgroundColor =\n          \"white\";\n      }\n    }\n  }\n\n  highlightPath(path) {\n    this.clearPath();\n    for (let i = 0; i < path.length; i++) {\n      document.getElementById(path[i]).style.backgroundColor = \"red\";\n    }\n  }\n  handleMouseExit() {\n   // this.clearPath();\n  }\n  render() {\n    return (\n      <div\n /*     onMouseOut={() =>\n          this.highlightPath(\n            this.props.D[this.props.D.length - 1][this.props.D[0].length - 1]\n              .path\n          )\n        }*/\n      >\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <Square className=\"letter_square\" />\n              </td>\n              <td>\n                <Square className=\"letter_square\" />\n              </td>\n              {this.props.seq2.split(\"\").map((c, i) => (\n                <td key={i}>\n                  <Square value={c} className=\"letter_square\" />\n                </td>\n              ))}\n            </tr>\n            {this.props.D.map((row, i) => (\n              <tr key={i}>\n                <td>\n                  <Square\n                    value={this.props.seq1.charAt(i - 1)}\n                    className=\"letter_square\"\n                  />\n                </td>\n                {row.map((e) => (\n                  <td key={e.id}>\n                    <Square\n                      value={e.score}\n                      className=\"score_square\"\n                      id={e.id}\n                      handleMouseOver={() => this.highlightPath(e.path)}\n                    />\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Grid;","import React from \"react\";\nimport Grid from './components/Grid';\n\nfunction align(a, b, matchScore, mismatchScore, gapScore) {\n  //    b0 b1 bj ...\n  // a0\n  // a1   D[i,j] = {score, a, b} where score and a/b is the optimal score and\n  // ai                          alignment for a0a1..ai and b0b1..bj\n  // ...\n\n  // init D\n  let D = new Array(a.length + 1);\n  for (let i = 0; i < a.length + 1; i++) {\n    D[i] = new Array(b.length + 1);\n    D[i][0] = { score: gapScore * i, a: a.substring(0, i), b: \"-\".repeat(i) };\n    D[i][0].id = i + \",0\";\n    if (i > 0) {\n      D[i][0].path = [...D[i - 1][0].path];\n    } else {\n      D[i][0].path = [];\n    }\n    D[i][0].path.push(D[i][0].id.valueOf());\n  }\n  for (let j = 0; j < b.length + 1; j++) {\n    D[0][j] = { score: gapScore * j, a: \"-\".repeat(j), b: b.substring(0, j) };\n    D[0][j].id = \"0,\" + j.toString();\n    if (j > 0) {\n      D[0][j].path = [...D[0][j - 1].path];\n    } else {\n      D[0][j].path = [];\n    }\n    D[0][j].path.push(D[0][j].id.valueOf());\n  }\n\n  let str = \"\";\n\n  for (let i = 0; i < a.length; i++) {\n    for (let j = 0; j < b.length; j++) {\n      let f = b.charAt(j) === a.charAt(i) ? matchScore : mismatchScore;\n      let score = Math.max(\n        D[i][j].score + f,\n        D[i][j + 1].score + gapScore,\n        D[i + 1][j].score + gapScore\n      );\n      D[i + 1][j + 1] = {};\n      D[i + 1][j + 1].score = score;\n      D[i + 1][j + 1].id = i + 1 + \",\" + (j + 1);\n      if (score === D[i][j].score + f) {\n        D[i + 1][j + 1].a = D[i][j].a + a.charAt(i);\n        D[i + 1][j + 1].b = D[i][j].b + b.charAt(j);\n        D[i + 1][j + 1].path = [...D[i][j].path];\n      } else if (score === D[i][j + 1].score + gapScore) {\n        D[i + 1][j + 1].a = D[i][j + 1].a + a.charAt(i);\n        D[i + 1][j + 1].b = D[i][j + 1].b + \"-\";\n        D[i + 1][j + 1].path = [...D[i][j + 1].path];\n      } else {\n        D[i + 1][j + 1].a = D[i + 1][j].a + \"-\";\n        D[i + 1][j + 1].b = D[i + 1][j].b + b.charAt(j);\n        D[i + 1][j + 1].path = [...D[i + 1][j].path];\n      }\n      D[i + 1][j + 1].path.push(D[i + 1][j + 1].id.valueOf());\n    }\n  }\n  str += matchScore + \", \" + mismatchScore + \", \" + gapScore + \"\\n\";\n  for (let i = 0; i < D.length; i++) {\n    for (let j = 0; j < D[0].length; j++) {\n      str += D[i][j].score + \" \";\n    }\n    str += \"\\n\";\n  }\n  // alert(str);\n  return D;\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    let seq1 = \"GACR\",\n      seq2 = \"SDFSR\";\n    this.state = {\n      seq1: seq1,\n      seq2: seq2,\n      matchScore: 1,\n      mismatchScore: 3,\n      gapScore: -1,\n      D: align(seq1, seq2, 1, 3, -1),\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(event) {\n    if (event.target.id === \"seq1\") {\n      this.setState({ seq1: event.target.value });\n    } else if (event.target.id === \"seq2\") {\n      this.setState({ seq2: event.target.value });\n    } else if (event.target.id === \"match\") {\n      this.setState({ matchScore: event.target.value });\n    } else if (event.target.id === \"mismatch\") {\n      this.setState({ mismatchScore: event.target.value });\n    } else if (event.target.id === \"gap\" && !isNaN(event.target.value)) {\n      this.setState({ gapScore: event.target.value });\n    }\n    if (\n      !isNaN(this.state.matchScore) &&\n      !isNaN(this.state.mismatchScore) &&\n      !isNaN(this.state.gapScore)\n    ) {\n    }\n  }\n  render() {\n    let matchScore = isNaN(parseInt(this.state.matchScore))\n      ? 0\n      : parseInt(this.state.matchScore);\n    let mismatchScore = isNaN(parseInt(this.state.mismatchScore))\n      ? 0\n      : parseInt(this.state.mismatchScore);\n    let gapScore = isNaN(parseInt(this.state.gapScore))\n      ? 0\n      : parseInt(this.state.gapScore);\n    let D = align(\n      this.state.seq1,\n      this.state.seq2,\n      matchScore,\n      mismatchScore,\n      gapScore\n    );\n    return (\n      <div>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <label>Sequence 1</label>\n              </td>\n              <td colSpan=\"4\">\n                <input\n                  type=\"text\"\n                  id=\"seq1\"\n                  className=\"seq\"\n                  value={this.state.seq1}\n                  maxLength=\"20\"\n                  onChange={this.handleChange}\n                ></input>\n              </td>\n              <td rowSpan=\"10\" id=\"result\">\n                <table id=\"alignment\">\n                  <tbody>\n                    <tr>\n                      <td>\n                        {D[this.state.seq1.length][this.state.seq2.length].a}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        {D[this.state.seq1.length][this.state.seq2.length].b}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        {\n                          D[this.state.seq1.length][this.state.seq2.length]\n                            .score\n                        }\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <label>Sequence 2</label>\n              </td>\n              <td colSpan=\"4\">\n                <input\n                  type=\"text\"\n                  id=\"seq2\"\n                  className=\"seq\"\n                  value={this.state.seq2}\n                  maxLength=\"20\"\n                  onChange={this.handleChange}\n                ></input>\n              </td>\n            </tr>\n            <tr colSpan=\"4\">\n              <th>\n                <label>Match Score</label>\n              </th>\n              <th>\n                <label>Mismatch Score</label>\n              </th>\n              <th>\n                <label>Gap Score</label>\n              </th>\n            </tr>\n            <tr>\n              <td>\n                <input\n                  className=\"params\"\n                  id=\"match\"\n                  type=\"number\"\n                  value={this.state.matchScore}\n                  onChange={this.handleChange}\n                />\n              </td>\n              <td>\n                <input\n                  className=\"params\"\n                  id=\"mismatch\"\n                  type=\"number\"\n                  value={this.state.mismatchScore}\n                  onChange={this.handleChange}\n                />\n              </td>\n              <td>\n                <input\n                  className=\"params\"\n                  id=\"gap\"\n                  type=\"number\"\n                  value={this.state.gapScore}\n                  onChange={this.handleChange}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <Grid D={D} seq1={this.state.seq1} seq2={this.state.seq2} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nfunction align(a, b, matchScore, mismatchScore, gapScore) {\n  //    b0 b1 bj ...\n  // a0\n  // a1   D[i,j] = {score, a, b} where score and a/b is the optimal score and\n  // ai                          alignment for a0a1..ai and b0b1..bj\n  // ...\n\n  // init D\n  let D = new Array(a.length + 1);\n  for (let i = 0; i < a.length + 1; i++) {\n    D[i] = new Array(b.length + 1);\n    D[i][0] = { score: gapScore * i, a: a.substring(0, i), b: \"-\".repeat(i) };\n    D[i][0].id = i + \",0\";\n    if (i > 0) {\n      D[i][0].path = [...D[i - 1][0].path];\n    } else {\n      D[i][0].path = [];\n    }\n    D[i][0].path.push(D[i][0].id.valueOf());\n  }\n  for (let j = 0; j < b.length + 1; j++) {\n    D[0][j] = { score: gapScore * j, a: \"-\".repeat(j), b: b.substring(0, j) };\n    D[0][j].id = \"0,\" + j.toString();\n    if (j > 0) {\n      D[0][j].path = [...D[0][j - 1].path];\n    } else {\n      D[0][j].path = [];\n    }\n    D[0][j].path.push(D[0][j].id.valueOf());\n  }\n\n  let str = \"\";\n\n  for (let i = 0; i < a.length; i++) {\n    for (let j = 0; j < b.length; j++) {\n      let f = b.charAt(j) === a.charAt(i) ? matchScore : mismatchScore;\n      let score = Math.max(\n        D[i][j].score + f,\n        D[i][j + 1].score + gapScore,\n        D[i + 1][j].score + gapScore\n      );\n      D[i + 1][j + 1] = {};\n      D[i + 1][j + 1].score = score;\n      D[i + 1][j + 1].id = i + 1 + \",\" + (j + 1);\n      if (score === D[i][j].score + f) {\n        D[i + 1][j + 1].a = D[i][j].a + a.charAt(i);\n        D[i + 1][j + 1].b = D[i][j].b + b.charAt(j);\n        D[i + 1][j + 1].path = [...D[i][j].path];\n      } else if (score === D[i][j + 1].score + gapScore) {\n        D[i + 1][j + 1].a = D[i][j + 1].a + a.charAt(i);\n        D[i + 1][j + 1].b = D[i][j + 1].b + \"-\";\n        D[i + 1][j + 1].path = [...D[i][j + 1].path];\n      } else {\n        D[i + 1][j + 1].a = D[i + 1][j].a + \"-\";\n        D[i + 1][j + 1].b = D[i + 1][j].b + b.charAt(j);\n        D[i + 1][j + 1].path = [...D[i + 1][j].path];\n      }\n      D[i + 1][j + 1].path.push(D[i + 1][j + 1].id.valueOf());\n    }\n  }\n  str += matchScore + \", \" + mismatchScore + \", \" + gapScore + \"\\n\";\n  for (let i = 0; i < D.length; i++) {\n    for (let j = 0; j < D[0].length; j++) {\n      str += D[i][j].score + \" \";\n    }\n    str += \"\\n\";\n  }\n  // alert(str);\n  return D;\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}