{"version":3,"sources":["components/Square.js","components/Grid.js","App.js","index.js"],"names":["Square","props","className","id","onClick","handleClick","div","value","highlightPath","path","D","i","length","j","document","getElementById","style","backgroundColor","clearPath","Grid","useEffect","seq2","split","map","c","key","row","seq1","charAt","e","score","App","React","Component","constructor","super","this","state","matchScore","mismatchScore","gapScore","handleChange","bind","event","target","setState","toString","toUpperCase","isNaN","render","parseInt","a","b","Array","substring","repeat","push","valueOf","f","Math","max","align","createElement","href","colSpan","type","maxLength","onChange","rowSpan","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.50d4eaff.chunk.js","sourcesContent":["import React from 'react';\nimport { animated } from 'react-spring';\n\nfunction Square(props) {\n  return (\n    <div\n      className={props.className}\n      id={props.id}\n      onClick={props.handleClick}\n    >\n      <animated.div>\n        {props.value}\n      </animated.div>\n    </div>\n  );\n}\n\nexport default Square;\n","import React, { useEffect } from 'react'\nimport Square from './Square';\n\nfunction highlightPath(path, D) {\n  clearPath(D);\n  for (let i = 0; i < path.length; i++) {\n    document.getElementById(path[i]).style.backgroundColor = \"red\";\n  }\n}\n\nfunction clearPath(D) {\n  for (let i = 0; i < D.length; i++) {\n    for (let j = 0; j < D[0].length; j++) {\n      document.getElementById(D[i][j].id).style.backgroundColor =\n      \"rgb(221, 255, 204)\";\n    }\n  }\n}\nexport default function Grid(props) {\n\n  useEffect(() => {\n    highlightPath(props.D[props.D.length - 1][props.D[0].length - 1].path, props.D);\n  }, [props]);\n\n  return (\n    <div>\n      <table >\n        <tbody >\n          <tr>\n            <td>\n              <Square className=\"letter_square\" />\n            </td>\n            <td>\n              <Square className=\"letter_square\" />\n            </td>\n            {props.seq2.split(\"\").map((c, i) => (\n              <td key={i}>\n                <Square value={c} className=\"letter_square\" />\n              </td>\n            ))}\n          </tr>\n          {props.D.map((row, i) => (\n            <tr key={i}>\n              <td>\n                <Square\n                  value={props.seq1.charAt(i - 1)}\n                  className=\"letter_square\"\n                />\n              </td>\n              {row.map((e, j) => (\n                <td key={props.D[i][j].id}>\n\n                  <div>\n                    <Square\n                      value={props.D[i][j].score}\n                      className=\"score_square\"\n                      id={props.D[i][j].id}\n                      handleClick={() => highlightPath(props.D[i][j].path, props.D)}\n                    />\n                  </div>\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}","import React from \"react\";\nimport Grid from './components/Grid';\n\nfunction align(a, b, matchScore, mismatchScore, gapScore) {\n  //    b0 b1 bj ...\n  // a0\n  // a1   D[i,j] = {score, a, b} where score and a/b is the optimal score and\n  // ai                          alignment for a0a1..ai and b0b1..bj\n  // ...\n\n  let D = new Array(a.length + 1);\n  for (let i = 0; i < a.length + 1; i++) {\n    D[i] = new Array(b.length + 1);\n    D[i][0] = { score: gapScore * i, a: a.substring(0, i), b: \"-\".repeat(i) };\n    D[i][0].id = i + \",0\";\n    if (i > 0) {\n      D[i][0].path = [...D[i - 1][0].path];\n    } else {\n      D[i][0].path = [];\n    }\n    D[i][0].path.push(D[i][0].id.valueOf());\n  }\n  for (let j = 0; j < b.length + 1; j++) {\n    D[0][j] = { score: gapScore * j, a: \"-\".repeat(j), b: b.substring(0, j) };\n    D[0][j].id = \"0,\" + j.toString();\n    if (j > 0) {\n      D[0][j].path = [...D[0][j - 1].path];\n    } else {\n      D[0][j].path = [];\n    }\n    D[0][j].path.push(D[0][j].id.valueOf());\n  }\n\n  for (let i = 0; i < a.length; i++) {\n    for (let j = 0; j < b.length; j++) {\n      let f = b.charAt(j) === a.charAt(i) ? matchScore : mismatchScore;\n      let score = Math.max(\n        D[i][j].score + f,\n        D[i][j + 1].score + gapScore,\n        D[i + 1][j].score + gapScore\n      );\n      D[i + 1][j + 1] = {};\n      D[i + 1][j + 1].score = score;\n      D[i + 1][j + 1].id = i + 1 + \",\" + (j + 1);\n      if (score === D[i][j].score + f) {\n        D[i + 1][j + 1].a = D[i][j].a + a.charAt(i);\n        D[i + 1][j + 1].b = D[i][j].b + b.charAt(j);\n        D[i + 1][j + 1].path = [...D[i][j].path];\n      } else if (score === D[i][j + 1].score + gapScore) {\n        D[i + 1][j + 1].a = D[i][j + 1].a + a.charAt(i);\n        D[i + 1][j + 1].b = D[i][j + 1].b + \"-\";\n        D[i + 1][j + 1].path = [...D[i][j + 1].path];\n      } else {\n        D[i + 1][j + 1].a = D[i + 1][j].a + \"-\";\n        D[i + 1][j + 1].b = D[i + 1][j].b + b.charAt(j);\n        D[i + 1][j + 1].path = [...D[i + 1][j].path];\n      }\n      D[i + 1][j + 1].path.push(D[i + 1][j + 1].id.valueOf());\n    }\n  }\n  return D;\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    let seq1 = \"AATCTAG\",\n      seq2 = \"ATCGGTAG\";\n    this.state = {\n      seq1: seq1,\n      seq2: seq2,\n      matchScore: 1,\n      mismatchScore: -1,\n      gapScore: -1,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(event) {\n    if (event.target.id === \"seq1\") {\n      this.setState({ seq1: event.target.value.toString().toUpperCase() });\n    } else if (event.target.id === \"seq2\") {\n      this.setState({ seq2: event.target.value.toString().toUpperCase() });\n    } else if (event.target.id === \"match\") {\n      this.setState({ matchScore: event.target.value });\n    } else if (event.target.id === \"mismatch\") {\n      this.setState({ mismatchScore: event.target.value });\n    } else if (event.target.id === \"gap\" && !isNaN(event.target.value)) {\n      this.setState({ gapScore: event.target.value });\n    }\n  }\n  render() {\n    let matchScore = isNaN(parseInt(this.state.matchScore))\n      ? 0\n      : parseInt(this.state.matchScore);\n    let mismatchScore = isNaN(parseInt(this.state.mismatchScore))\n      ? 0\n      : parseInt(this.state.mismatchScore);\n    let gapScore = isNaN(parseInt(this.state.gapScore))\n      ? 0\n      : parseInt(this.state.gapScore);\n    let D = align(\n      this.state.seq1,\n      this.state.seq2,\n      matchScore,\n      mismatchScore,\n      gapScore\n    );\n    return (\n      <div id=\"main\">\n        <p>\n\n          The <a href=\"https://en.wikipedia.org/wiki/Needleman%E2%80%93Wunsch_algorithm\">Needleman-Wunsch algorithm </a> determines the optimal alignment and match score of two strings. It reduces to popular dynamic programming problems such as <button onClick={() => {this.setState({matchScore: 1, mismatchScore: 0, gapScore: 0})}}>Longest Common Subsequence</button>  and <button onClick={() => {this.setState({matchScore: 0, mismatchScore: -1, gapScore: -1})}}>Edit Distance</button> by altering the score scheme. The Needleman-Wunsch algorithm has quadratic time and linear space complexities making it useful for aligning extremely long strings like genome sequences to see if they share a common ancestor.\n          </p>\n          <p>\n          The problem is solved by filling table DP using the recurrence relation,\n          <br></br>\n          $$\\small{'\\\\texttt{ DP[i, j] = max}'} \n          \\begin{'{cases}'}\n          \\small{'\\\\texttt{DP[i-1, j-1] + score(S[i], T[j])}'}\\\\\n          \\small{'\\\\texttt{DP[i-1, j] + score(S[i], -)}'}\\\\\n          \\small{'\\\\texttt{DP[i, j-1] + score(-, T[j])}'}\n          \\end{'{cases}'}\n          \\texttt{'{= max}'}\n          \\begin{'{cases}'}\n          \\small{'\\\\texttt{DP[i-1, j-1] + \\(match_score}\\\\texttt{ if }\\\\texttt{ S[i] == T[j] }\\\\texttt{ else  }\\\\texttt{ mismatch_score)}'}\\\\\n          \\small{'\\\\texttt{DP[i-1, j] + gap_score}'}\\\\\n          \\small{'\\\\texttt{DP[i, j-1] + gap_score}'}\n          \\end{'{cases}'}\n          $$\n          to compute the optimal score, then backtracking (shown below in red) to find the corresponding alignment.\n          </p>\n          \n        {/* <p>\n          The demo below shows for two sequences S and T and a score scheme:\n          <ul>\n            <li>The optimal alignment and score</li>\n            <li>The table <span className=\"mono\">DP</span>, where <span className=\"mono\">DP[i, j]</span> holds the optimal score for sequences <span className=\"mono\">S[:i]</span> and <span className=\"mono\">T[:j]</span></li>\n            <li>The path followed by backtracking highlighted in red</li>\n          </ul>\n\n        </p> */}\n        <table id=\"param_result\">\n          <tr>\n\n            <td>\n              <tr>\n                <td>\n                  <label className=\"param_label\"> Sequence S</label>\n                </td>\n                <td colSpan=\"4\">\n                  <input\n\n                    type=\"text\"\n                    id=\"seq1\"\n                    className=\"seq\"\n                    value={this.state.seq1}\n                    maxLength=\"20\"\n                    onChange={this.handleChange}\n                  ></input>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <label className=\"param_label\">Sequence T</label>\n                </td>\n                <td colSpan=\"4\">\n                  <input\n                    type=\"text\"\n                    id=\"seq2\"\n                    className=\"seq\"\n                    value={this.state.seq2}\n                    maxLength=\"20\"\n                    onChange={this.handleChange}\n                  ></input>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <table>\n                    <tr>\n                      <label className=\"param_label\">Match Score</label>\n                    </tr>\n                    <tr>\n                      <input\n                        className=\"params\"\n                        id=\"match\"\n                        type=\"number\"\n                        value={this.state.matchScore}\n                        onChange={this.handleChange}\n                      />\n                    </tr>\n                  </table>\n                </td>\n                <td>\n                  <table>\n                    <tr>\n                      <label className=\"param_label\">Mismatch Score</label>\n                    </tr>\n                    <tr>\n                      <input\n                        className=\"params\"\n                        id=\"mismatch\"\n                        type=\"number\"\n                        value={this.state.mismatchScore}\n                        onChange={this.handleChange}\n                      />\n                    </tr>\n\n                  </table>\n                </td>\n                <td>\n                  <table>\n                    <tr>\n                      <label className=\"param_label\">Gap Score</label>\n                    </tr>\n                    <tr>\n                      <input\n                        className=\"params\"\n                        id=\"gap\"\n                        type=\"number\"\n                        value={this.state.gapScore}\n                        onChange={this.handleChange}\n                      />\n                    </tr>\n                  </table>\n                </td>\n              </tr>\n            </td>\n\n            <td rowSpan=\"10\" id=\"result\" >\n              <table id=\"alignment\"  >\n                <tr>\n                  <table >\n                    <tbody>\n                      <tr>\n                        {D[this.state.seq1.length][this.state.seq2.length].a.split('').map((c, i) => <td>{c}</td>)}\n                      </tr>\n                      <tr>\n                        {D[this.state.seq1.length][this.state.seq2.length].b.split('').map((c, i) => <td>{c}</td>)}\n                      </tr>\n                    </tbody>\n                  </table>\n                </tr>\n                <tr>\n                  {'Score: ' + D[this.state.seq1.length][this.state.seq2.length].score}\n                </tr>\n              </table>\n            </td>\n\n          </tr>\n        </table>\n        <div>\n          <Grid D={D} seq1={this.state.seq1} seq2={this.state.seq2} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}